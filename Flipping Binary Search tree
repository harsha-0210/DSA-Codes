#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* left, * right;
    Node(int val) : data(val), left(nullptr), right(nullptr) {}
};

void flipTree(Node* root) {
    if (root == nullptr) return;
    swap(root->left, root->right);
    flipTree(root->left);
    flipTree(root->right);
}

void inOrder(Node* root) {
    if (root == nullptr) return;
    inOrder(root->left);
    cout << root->data << " ";
    inOrder(root->right);
}

int main() {
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);

    cout << "Original Tree: ";
    inOrder(root);
    cout << endl;

    flipTree(root);
    
    cout << "Flipped Tree: ";
    inOrder(root);
    cout << endl;
}
